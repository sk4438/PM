/*
 * Generated by asn1c-0.9.28 (http://lionet.info/asn1c)
 * From ASN.1 module "PDU"
 * 	found in "PDU.asn1"
 * 	`asn1c -gen-PER`
 */

#ifndef	_SubCounterIndexType_H_
#define	_SubCounterIndexType_H_


#include <asn_application.h>

/* Including external dependencies */
#include <VisibleString.h>
#include <NativeInteger.h>
#include <OCTET_STRING.h>
#include <constr_SEQUENCE.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SubCounterIndexType_PR {
	SubCounterIndexType_PR_NOTHING,	/* No components present */
	SubCounterIndexType_PR_sum,
	SubCounterIndexType_PR_binIndex,
	SubCounterIndexType_PR_qOS_5QI,
	SubCounterIndexType_PR_qOS_QCI,
	SubCounterIndexType_PR_cause,
	SubCounterIndexType_PR_stringIndex,
	SubCounterIndexType_PR_plMN,
	SubCounterIndexType_PR_sNSSAI,
	/* Extensions may appear below */
	
} SubCounterIndexType_PR;

/* SubCounterIndexType */
typedef struct SubCounterIndexType {
	SubCounterIndexType_PR present;
	union SubCounterIndexType_u {
		VisibleString_t	 sum;
		long	 binIndex;
		long	 qOS_5QI;
		long	 qOS_QCI;
		long	 cause;
		VisibleString_t	 stringIndex;
		OCTET_STRING_t	 plMN;
		struct sNSSAI {
			OCTET_STRING_t	 sst;
			OCTET_STRING_t	 sd;
			
			/* Context for parsing across buffer boundaries */
			asn_struct_ctx_t _asn_ctx;
		} sNSSAI;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SubCounterIndexType_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SubCounterIndexType;
static int
memb_plMN_constraint_1(asn_TYPE_descriptor_t *td, const void *sptr,
			asn_app_constraint_failed_f *ctfailcb, void *app_key);

#ifdef __cplusplus
}
#endif

#endif	/* _SubCounterIndexType_H_ */
#include <asn_internal.h>
